[
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 30789725400,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp()"
            }
          }
        ],
        "line": 3,
        "name": "As a user I want to create new account with valid credentials",
        "description": "",
        "id": "creating-new-account-test;as-a-user-i-want-to-create-new-account-with-valid-credentials",
        "after": [
          {
            "result": {
              "duration": 669829800,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2376572100,
              "status": "passed"
            },
            "line": 4,
            "name": "User clicks on the sign in button from the homepage",
            "match": {
              "location": "CreateAccountSteps.userClicksOnTheSignInButtonFromTheHomepage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 143826800,
              "status": "passed"
            },
            "line": 5,
            "name": "enters an email in the email address field",
            "match": {
              "location": "CreateAccountSteps.entersAnEmailInTheEmailAddressField()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 99693700,
              "status": "passed"
            },
            "line": 6,
            "name": "clicks on create an account tab",
            "match": {
              "location": "CreateAccountSteps.clicksOnCreateAnAccountTab()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2418587900,
              "status": "passed"
            },
            "line": 7,
            "name": "fill all mandatory fields",
            "match": {
              "location": "CreateAccountSteps.fillAllMandatoryFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "James",
                  "Bond",
                  "abc12456",
                  "123 Abc Street",
                  "London",
                  "Florida",
                  "12345",
                  "01234567890"
                ],
                "line": 8
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1839487400,
              "status": "passed"
            },
            "line": 9,
            "name": "click on register",
            "match": {
              "location": "CreateAccountSteps.clickOnRegister()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 51591000,
              "status": "passed"
            },
            "line": 10,
            "name": "verify my account text \"MY ACCOUNT\"",
            "match": {
              "arguments": [
                {
                  "val": "MY ACCOUNT",
                  "offset": 24
                }
              ],
              "location": "CreateAccountSteps.verifyMyAccountText(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 46977200,
              "status": "passed"
            },
            "line": 11,
            "name": "verify user can see his name on top right \"James Bond\"",
            "match": {
              "arguments": [
                {
                  "val": "James Bond",
                  "offset": 43
                }
              ],
              "location": "CreateAccountSteps.verifyUserCanSeeHisNameOnTopRight(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 5011812300,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp()"
            }
          }
        ],
        "line": 13,
        "name": "As a user I want to see an error message while trying",
        "description": "to create account with invalid credentials",
        "id": "creating-new-account-test;as-a-user-i-want-to-see-an-error-message-while-trying",
        "after": [
          {
            "result": {
              "duration": 656876700,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1678295300,
              "status": "passed"
            },
            "line": 15,
            "name": "User clicks on the sign in button from the homepage",
            "match": {
              "location": "CreateAccountSteps.userClicksOnTheSignInButtonFromTheHomepage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 146715700,
              "status": "passed"
            },
            "line": 16,
            "name": "enters an email in the email address field",
            "match": {
              "location": "CreateAccountSteps.entersAnEmailInTheEmailAddressField()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 93840000,
              "status": "passed"
            },
            "line": 17,
            "name": "clicks on create an account tab",
            "match": {
              "location": "CreateAccountSteps.clicksOnCreateAnAccountTab()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2301346000,
              "status": "passed"
            },
            "line": 18,
            "name": "fill all mandatory fields",
            "match": {
              "location": "CreateAccountSteps.fillAllMandatoryFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "$%1234",
                  "DD12**",
                  "abc$%12456",
                  "123 Abc Str%%t",
                  "Lo$%^on",
                  "Florida",
                  "123ssa45",
                  "0123abcd67890"
                ],
                "line": 19
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1200472300,
              "status": "passed"
            },
            "line": 20,
            "name": "click on register",
            "match": {
              "location": "CreateAccountSteps.clickOnRegister()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 49103100,
              "status": "passed"
            },
            "line": 21,
            "name": "verify that invalid information will give an error message \"There are 6 errors\"",
            "match": {
              "arguments": [
                {
                  "val": "There are 6 errors",
                  "offset": 60
                }
              ],
              "location": "CreateAccountSteps.verifyThatInvalidInformationWillGiveAnErrorMessage(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Creating new account Test",
    "description": "",
    "id": "creating-new-account-test",
    "keyword": "Feature",
    "uri": "createaccounttest.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 4612076300,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp()"
            }
          }
        ],
        "line": 3,
        "name": "As a user I want to delete an item from the basket and see basket is empty",
        "description": "",
        "id": "test-for-deleting-item-from-cart;as-a-user-i-want-to-delete-an-item-from-the-basket-and-see-basket-is-empty",
        "after": [
          {
            "result": {
              "duration": 671640300,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 242628200,
              "status": "passed"
            },
            "line": 4,
            "name": "User selects Women \"Women\" tab from the main menu",
            "match": {
              "arguments": [
                {
                  "val": "Women",
                  "offset": 20
                }
              ],
              "location": "DeletionTestSteps.userSelectsWomenTabFromTheMainMenu(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1681213500,
              "status": "passed"
            },
            "line": 5,
            "name": "Select Blouses \"Summer Dresses\" from the sub menu",
            "match": {
              "arguments": [
                {
                  "val": "Summer Dresses",
                  "offset": 16
                }
              ],
              "location": "DeletionTestSteps.selectBlousesFromTheSubMenu(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1505070700,
              "status": "passed"
            },
            "line": 6,
            "name": "Adds item to cart",
            "match": {
              "location": "DeletionTestSteps.addsItemToCart()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 779648100,
              "status": "passed"
            },
            "line": 7,
            "name": "closes shopping cart window",
            "match": {
              "location": "DeletionTestSteps.closesShoppingCartWindow()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 287078000,
              "status": "passed"
            },
            "line": 8,
            "name": "verify shopping cart has delete button",
            "match": {
              "location": "DeletionTestSteps.verifyShoppingCartHasDeleteButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 101976400,
              "status": "passed"
            },
            "line": 9,
            "name": "removes item from cart",
            "match": {
              "location": "DeletionTestSteps.removesItemFromCart()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 21677054900,
              "status": "passed"
            },
            "line": 10,
            "name": "verifies the banner display \"Your shopping cart is empty.\"",
            "match": {
              "arguments": [
                {
                  "val": "Your shopping cart is empty.",
                  "offset": 29
                }
              ],
              "location": "DeletionTestSteps.verifiesTheBannerDisplay(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Test for deleting item from cart",
    "description": "",
    "id": "test-for-deleting-item-from-cart",
    "keyword": "Feature",
    "uri": "deletiontest.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 4727747200,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp()"
            }
          }
        ],
        "line": 3,
        "name": "Verify that user can drap the map to see a store from West Palm Beach",
        "description": "",
        "id": "finding-a-store-on-the-\u0027our-stores\u0027-page;verify-that-user-can-drap-the-map-to-see-a-store-from-west-palm-beach",
        "after": [
          {
            "result": {
              "duration": 1008413200,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1801529400,
              "status": "passed"
            },
            "line": 4,
            "name": "User clicks on the link from the homepage \"Our Stores\"",
            "match": {
              "arguments": [
                {
                  "val": "Our Stores",
                  "offset": 43
                }
              ],
              "location": "StoreFinderSteps.userClicksOnTheLinkFromTheHomepage(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 80338400,
              "status": "passed"
            },
            "line": 5,
            "name": "User accepts the alert",
            "match": {
              "location": "StoreFinderSteps.userAcceptsTheAlert()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 350361200,
              "error_message": "org.openqa.selenium.interactions.MoveTargetOutOfBoundsException: move target out of bounds\n  (Session info: chrome\u003d96.0.4664.110)\nBuild info: version: \u00274.0.0\u0027, revision: \u00273a21814679\u0027\nSystem info: host: \u0027DESKTOP-KDKBGFP\u0027, ip: \u0027172.31.224.1\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_121\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCommand: [c3c7efe6a26f96de7c01f2e5287a664c, actions {actions\u003d[org.openqa.selenium.interactions.Sequence@655a01d8]}]\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 96.0.4664.110, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: C:\\Users\\Vrajesh\\AppData\\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:62744}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:62744/devtoo..., se:cdpVersion: 96.0.4664.110, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}\nSession ID: c3c7efe6a26f96de7c01f2e5287a664c\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)\r\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)\r\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:164)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:139)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:559)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.perform(RemoteWebDriver.java:627)\r\n\tat org.openqa.selenium.interactions.Actions$BuiltAction.perform(Actions.java:617)\r\n\tat com.automationpractice.pages.OurStoresPage.scrollMapToSeeWestPalmBeach(OurStoresPage.java:45)\r\n\tat com.automationpractice.cucumber.steps.StoreFinderSteps.movesTheMapToBeAbleToViewAStoreFromWestPalmBeach(StoreFinderSteps.java:23)\r\n\tat ✽.And moves the map to be able to view a store from West Palm Beach(storefinder.feature:6)\r\n",
              "status": "failed"
            },
            "line": 6,
            "name": "moves the map to be able to view a store from West Palm Beach",
            "match": {
              "location": "StoreFinderSteps.movesTheMapToBeAbleToViewAStoreFromWestPalmBeach()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "scrolls the map for a clear view",
            "match": {
              "location": "StoreFinderSteps.scrollsTheMapForAClearView()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "takes a screenshot for future reference",
            "match": {
              "location": "StoreFinderSteps.takesAScreenshotForFutureReference()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Finding a store on the \u0027Our Stores\u0027 page",
    "description": "",
    "id": "finding-a-store-on-the-\u0027our-stores\u0027-page",
    "keyword": "Feature",
    "uri": "storefinder.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 5418173000,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp()"
            }
          }
        ],
        "line": 3,
        "name": "User should be able to view Summer Dresses option from the navigation menu",
        "description": "",
        "id": "selecting-a-submenu-from-the-main-menu;user-should-be-able-to-view-summer-dresses-option-from-the-navigation-menu",
        "after": [
          {
            "result": {
              "duration": 661541000,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 173409400,
              "status": "passed"
            },
            "line": 4,
            "name": "User selects Women \"Women\" tab from the main menu",
            "match": {
              "arguments": [
                {
                  "val": "Women",
                  "offset": 20
                }
              ],
              "location": "DeletionTestSteps.userSelectsWomenTabFromTheMainMenu(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1886094200,
              "status": "passed"
            },
            "line": 5,
            "name": "Select Blouses \"Summer Dresses\" from the sub menu",
            "match": {
              "arguments": [
                {
                  "val": "Summer Dresses",
                  "offset": 16
                }
              ],
              "location": "DeletionTestSteps.selectBlousesFromTheSubMenu(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 38830100,
              "status": "passed"
            },
            "line": 6,
            "name": "verifies the \"SUMMER DRESSES \" page verification text",
            "match": {
              "arguments": [
                {
                  "val": "SUMMER DRESSES ",
                  "offset": 14
                }
              ],
              "location": "SummerDressOptionSteps.verifiesThePageVerificationText(String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Selecting a submenu from the main menu",
    "description": "",
    "id": "selecting-a-submenu-from-the-main-menu",
    "keyword": "Feature",
    "uri": "summerdressesoption.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 4252001700,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp()"
            }
          }
        ],
        "line": 3,
        "name": "User should be able to update the price range for the filter options",
        "description": "",
        "id": "changing-price-range;user-should-be-able-to-update-the-price-range-for-the-filter-options",
        "after": [
          {
            "result": {
              "duration": 681465500,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 205880100,
              "status": "passed"
            },
            "line": 4,
            "name": "User selects Women \"Women\" tab from the main menu",
            "match": {
              "arguments": [
                {
                  "val": "Women",
                  "offset": 20
                }
              ],
              "location": "DeletionTestSteps.userSelectsWomenTabFromTheMainMenu(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2555473800,
              "status": "passed"
            },
            "line": 5,
            "name": "Select Blouses \"Summer Dresses\" from the sub menu",
            "match": {
              "arguments": [
                {
                  "val": "Summer Dresses",
                  "offset": 16
                }
              ],
              "location": "DeletionTestSteps.selectBlousesFromTheSubMenu(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 46954700,
              "status": "passed"
            },
            "line": 6,
            "name": "verifies the \"SUMMER DRESSES \" page verification text",
            "match": {
              "arguments": [
                {
                  "val": "SUMMER DRESSES ",
                  "offset": 14
                }
              ],
              "location": "SummerDressOptionSteps.verifiesThePageVerificationText(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 422514100,
              "status": "passed"
            },
            "line": 7,
            "name": "moves the slider to change the price range",
            "match": {
              "location": "PriceRangeTests.movesTheSliderToChangeThePriceRange()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Changing price range",
    "description": "",
    "id": "changing-price-range",
    "keyword": "Feature",
    "uri": "summerdressespricerangetest.feature"
  }
]